{"version":3,"file":"main.e9e030c334e05dec9f62.js","mappings":"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","sources":["webpack://webpack-seed/webpack/bootstrap","webpack://webpack-seed/./src/core/interfaces/BookSettings.ts","webpack://webpack-seed/webpack/runtime/define property getters","webpack://webpack-seed/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-seed/./src/core/helpers/localstore.ts","webpack://webpack-seed/./src/core/services/data-provider.ts","webpack://webpack-seed/./src/core/services/book-elements.ts","webpack://webpack-seed/./src/core/services/media-query.ts","webpack://webpack-seed/./src/core/services/layout.ts","webpack://webpack-seed/./src/core/services/navigation.ts","webpack://webpack-seed/./src/core/services/user-actions.ts","webpack://webpack-seed/./src/core/helpers/debounce.ts","webpack://webpack-seed/./src/core/services/paragraph-tools.ts","webpack://webpack-seed/./src/core/app.ts","webpack://webpack-seed/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export interface BookSettings {\n    bookId: string;\n    pagesPerScreen: 1 | 2;\n    defaultPageIndex: number;\n    allowedNavigationSteps: number;\n    mobileBreakporint: number;\n    isPanelOpened: boolean;\n    defaultFontSizeRatio: number;\n    defaultColorTheme: ColorTheme;\n    defaultFont: Font;\n}\n\nexport enum ColorTheme {\n    WHITE = \"white-theme\",\n    DARK = \"dark-theme\",\n    WARM = \"warm-theme\"\n}\nexport enum Font {\n    NOTO = \"Noto Naskh Arabic\",\n    TAHOMA = \"Tahoma\",\n    ARIAL = \"Arial\"\n}\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export const setLocalStorage = (key: LocalstorgeKeys, value: unknown) => {\n    localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const getLocalStorage = (key: LocalstorgeKeys): unknown | null => {\n    try {\n        const itemStr = localStorage.getItem(key);\n        if (!itemStr) return null;\n        const item = JSON.parse(itemStr);\n        return item;\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n};\n\nexport enum LocalstorgeKeys {\n    PAGE_INDEX = \"page-index\",\n    FONT_SIZE_RATIO = \"font-size-ratio\",\n    PANEL_STATE = \"panel-state\",\n    COLOR_THEME = \"color-theme\",\n    FONT_FAMILY = \"font-family\"\n}\n","const baseUrl = window.location.href.slice(0, -1);\nclass DataProvider {\n    id: string;\n    chaptersNames: string[];\n    bookNav: string[];\n    chaptersContent!: (Element | null)[];\n\n    constructor(id: string) {\n        this.id = id;\n        this.chaptersNames = [];\n        this.bookNav = [];\n    }\n\n    private async _getNavigation(): Promise<string | null> {\n        try {\n            const res = await fetch(`${baseUrl}/packages/${this.id}/Navigation/nav.xhtml`);\n            return await res.text();\n        } catch (e) {\n            console.log(e);\n            return null;\n        }\n    }\n\n    private async _getHTMLDocument(name: string): Promise<string | null> {\n        try {\n            const res = await fetch(`${baseUrl}/packages/${this.id}/Content/${name}`);\n            return await res.text();\n        } catch (e) {\n            console.log(e);\n            return null;\n        }\n    }\n\n    async createBookNavigationlist(): Promise<string[]> {\n        const navAsText = await this._getNavigation();\n        const parser: DOMParser = new DOMParser();\n        const navAsHTML: Document = parser.parseFromString(navAsText, \"text/html\");\n        const nav: string[] = [];\n\n        const anchorList = navAsHTML.querySelector(\"ol\")?.querySelectorAll(\"a\");\n        if (!anchorList) return [];\n\n        anchorList.forEach((item: HTMLAnchorElement) => {\n            const chapterNameArr = item.getAttribute(\"href\")?.split(\"/\");\n            chapterNameArr && nav.push(chapterNameArr[chapterNameArr.length - 1]);\n        });\n        return nav;\n    }\n\n    async getHTMLChapters(): Promise<(Element | null)[]> {\n        const navList = await this.createBookNavigationlist();\n        this.bookNav = navList;\n\n        const chapterDataPromises: Promise<string | null>[] = [];\n\n        this.bookNav.forEach(async (name) => {\n            chapterDataPromises.push(this._getHTMLDocument(name));\n        });\n\n        const chaptersRowData: (string | null)[] = await Promise.all([...chapterDataPromises]);\n\n        const chaptersHTMLElements: (Element | null)[] = chaptersRowData.map((chapter) => {\n            if (!chapter) return null;\n            const parser: DOMParser = new DOMParser();\n            const htmlDoc: Document = parser.parseFromString(chapter, \"text/html\");\n            const body: HTMLBodyElement | null = htmlDoc.querySelector(\"body\");\n\n            if (!body || !body.firstElementChild) return null;\n\n            return body.firstElementChild;\n        });\n\n        return chaptersHTMLElements;\n    }\n}\n\nexport default DataProvider;\n","class BookElements {\n    static book: HTMLElement = document.getElementById(\"book\");\n\n    static nextPageButton: HTMLElement = document.getElementById(\"next-page-btn\");\n    static previousPageButton: HTMLElement = document.getElementById(\"previous-page-btn\");\n    static nextBulkPageButton: HTMLElement = document.getElementById(\"next-bulk-page-btn\");\n    static previousBulkPageButton: HTMLElement = document.getElementById(\"previous-bulk-page-btn\");\n\n    static smallerFontButton: HTMLElement = document.getElementById(\"smaller-font\");\n    static resetFontButton: HTMLElement = document.getElementById(\"reset-font\");\n    static largerFontButton: HTMLElement = document.getElementById(\"larger-font\");\n\n    static colorThemeButtons: NodeListOf<HTMLElement> = document.querySelectorAll(\".color-btn\");\n\n    static fontButtons: NodeListOf<HTMLElement> = document.querySelectorAll(\".font-btn\");\n    static openFontsListButton: HTMLElement = document.querySelector(\".open-fonts-list\");\n    static closeFontsListButton: HTMLElement = document.querySelector(\".close-fonts-list\");\n    static fontsList: HTMLElement = document.querySelector(\".fonts-list\");\n    static fontFeedback: HTMLElement = document.querySelector(\".open-fonts-list span\");\n\n    static controlsButton: HTMLElement = document.getElementById(\"toggle-controls-btn\");\n    static controlsPopup: HTMLElement = document.getElementById(\"controls-popup\");\n\n    static navigationFeedbackText: HTMLElement = document.getElementById(\"navigation-feedback\");\n    static navigationProgressBar: HTMLElement = document.getElementById(\"navigation-progress-bar\");\n\n    static panel: HTMLElement = document.querySelector(\".panel\");\n\n    static paragraphTools: HTMLElement = document.getElementById(\"paragraph-tools\");\n    static highlightButton: HTMLElement = document.getElementById(\"highlight-btn\");\n    static unhighlightButton: HTMLElement = document.getElementById(\"unhighlight-btn\");\n    static copyButton: HTMLElement = document.getElementById(\"copy-btn\");\n}\n\nexport default BookElements;\n","class MediaQuery {\n    private mediaQueryList: MediaQueryList;\n\n    constructor(query: string) {\n        this.mediaQueryList = window.matchMedia(query);\n    }\n\n    public addListener(callback: (matches: boolean) => void): void {\n        this.mediaQueryList.addListener((event) => {\n            callback(event.matches);\n        });\n    }\n\n    public removeListener(callback: (matches: boolean) => void): void {\n        this.mediaQueryList.removeListener((event) => {\n            callback(event.matches);\n        });\n    }\n\n    public get matches(): boolean {\n        return this.mediaQueryList.matches;\n    }\n}\n\nexport default MediaQuery;\n","import { ColorTheme, Font } from \"./../interfaces/BookSettings\";\nimport MediaQuery from \"./media-query\";\nimport BookElements from \"./book-elements\";\nimport { bookSettings } from \"../../index\";\nimport Navigation from \"./navigation\";\nimport { setLocalStorage, LocalstorgeKeys } from \"../helpers/localstore\";\n\nclass Layout {\n    static isActivePanel: boolean;\n    static isActiveControls = false;\n    static isActiveFontsList = false;\n    static isActiveParagraphTools = false;\n    static selectedParagraph: HTMLParagraphElement;\n    static fontSizeRatio = 1;\n    static selectedFont: Font;\n    static fontsListOriginalParentHeight: number;\n\n    private static _updateFontFeedback(font: Font): void {\n        this.selectedFont = font;\n        BookElements.fontFeedback.innerHTML = font;\n    }\n\n    private static _updateButtonsDisablity(): void {\n        const { largerFontButton, smallerFontButton } = BookElements;\n        (largerFontButton as HTMLButtonElement).disabled = this.fontSizeRatio >= 1.28;\n        (smallerFontButton as HTMLButtonElement).disabled = this.fontSizeRatio <= 0.7;\n    }\n\n    static updateImagesUrl(imagesList: NodeListOf<Element>): void {\n        const replaceUrl = (old: string): string => {\n            return old.replaceAll(\"/Images/\", `/packages/${bookSettings.bookId}/Images/`);\n        };\n\n        imagesList.forEach((img) => {\n            img.setAttribute(\"src\", replaceUrl(img.getAttribute(\"src\")));\n        });\n    }\n\n    static appendChaptersToBody(elements: Element[]): void {\n        BookElements.book.innerHTML = \"\";\n        elements.forEach((el) => {\n            BookElements.book.appendChild(el);\n        });\n    }\n    static handelResponsivness(): void {\n        const mediaQuery = new MediaQuery(`(max-width: ${bookSettings.mobileBreakporint}px)`);\n        function handleResize(matches: boolean) {\n            if (matches) {\n                BookElements.book.style.columnCount = \"1\";\n            } else {\n                BookElements.book.style.columnCount = \"2\";\n            }\n        }\n\n        mediaQuery.addListener(handleResize);\n        handleResize(mediaQuery.matches);\n    }\n\n    static setActivePanelState(state: boolean): void {\n        const { panel } = BookElements;\n        !state ? panel.classList.remove(\"opened\") : panel.classList.add(\"opened\");\n        this.isActivePanel = state;\n    }\n\n    static handelTogglePanel(): void {\n        const { panel, controlsPopup } = BookElements;\n        this.isActivePanel ? panel.classList.remove(\"opened\") : panel.classList.add(\"opened\");\n        this.isActivePanel && controlsPopup.classList.remove(\"opened\");\n        this.isActivePanel && this.closeFontsList();\n        this.isActivePanel = !this.isActivePanel;\n    }\n\n    static toggleContol(): void {\n        const { controlsPopup } = BookElements;\n        this.isActiveControls ? controlsPopup.classList.remove(\"opened\") : controlsPopup.classList.add(\"opened\");\n        this.isActiveControls = !this.isActiveControls;\n    }\n\n    static smallerFont(): void {\n        if (this.fontSizeRatio <= 0.7) return;\n        const { book, resetFontButton } = BookElements;\n        this.fontSizeRatio -= 0.15;\n        book.style.fontSize = `${this.fontSizeRatio}rem`;\n        resetFontButton.innerHTML = `${Math.ceil(this.fontSizeRatio * 100)}%`;\n        this._updateButtonsDisablity();\n        Navigation.updateNavigation();\n        // Save to local storage\n        setLocalStorage(LocalstorgeKeys.FONT_SIZE_RATIO, this.fontSizeRatio);\n    }\n    static resetFont(): void {\n        const { book, resetFontButton } = BookElements;\n        this.fontSizeRatio = 1;\n        book.style.fontSize = \"1rem\";\n        resetFontButton.innerHTML = `100%`;\n        this._updateButtonsDisablity();\n        Navigation.updateNavigation();\n        // Save to local storage\n        setLocalStorage(LocalstorgeKeys.FONT_SIZE_RATIO, this.fontSizeRatio);\n    }\n    static largerFont(): void {\n        if (this.fontSizeRatio >= 1.28) return;\n        const { book, resetFontButton } = BookElements;\n        this.fontSizeRatio += 0.15;\n        book.style.fontSize = `${this.fontSizeRatio}rem`;\n        resetFontButton.innerHTML = `${Math.ceil(this.fontSizeRatio * 100)}%`;\n        this._updateButtonsDisablity();\n        Navigation.updateNavigation();\n        // Save to local storage\n        setLocalStorage(LocalstorgeKeys.FONT_SIZE_RATIO, this.fontSizeRatio);\n    }\n\n    static setColorTheme(newTheme: ColorTheme): void {\n        document.body.setAttribute(\"class\", \"\");\n        document.body.classList.add(newTheme);\n        BookElements.colorThemeButtons.forEach((button) => {\n            const themeValue: ColorTheme = button.getAttribute(\"data-value\") as ColorTheme;\n            newTheme === themeValue ? button.classList.add(\"selected\") : button.classList.remove(\"selected\");\n        });\n\n        // Save to local storage\n        setLocalStorage(LocalstorgeKeys.COLOR_THEME, newTheme);\n    }\n\n    static setFont(newFont: Font): void {\n        const { book, fontButtons } = BookElements;\n        book.setAttribute(\"class\", \"\");\n        book.classList.add(newFont.replaceAll(\" \", \"-\"));\n        fontButtons.forEach((button) => {\n            const fontValue: Font = button.getAttribute(\"data-value\") as Font;\n            newFont === fontValue ? button.classList.add(\"selected\") : button.classList.remove(\"selected\");\n            newFont === fontValue && this._updateFontFeedback(newFont);\n        });\n        Navigation.updateNavigation();\n\n        // Save to local storage\n        setLocalStorage(LocalstorgeKeys.FONT_FAMILY, newFont);\n    }\n\n    static setFontSizeRatio(ratio: number): void {\n        if (ratio < 0.65 || ratio > 1.35) return;\n        const { book, resetFontButton } = BookElements;\n        this.fontSizeRatio = ratio;\n        book.style.fontSize = `${this.fontSizeRatio}rem`;\n        resetFontButton.innerHTML = `${Math.ceil(this.fontSizeRatio * 100)}%`;\n        this._updateButtonsDisablity();\n        Navigation.updateNavigation();\n\n        // Save to local storage\n        setLocalStorage(LocalstorgeKeys.FONT_SIZE_RATIO, ratio);\n    }\n\n    static openFontsList(): void {\n        const { fontsList } = BookElements;\n        this.fontsListOriginalParentHeight = fontsList.parentElement.offsetHeight;\n        fontsList.parentElement.style.height = `${this.fontsListOriginalParentHeight}px`;\n        fontsList.parentElement.style.height = `${fontsList.offsetHeight}px`;\n        fontsList.classList.add(\"slide-up\");\n    }\n\n    static closeFontsList(): void {\n        const { fontsList } = BookElements;\n        fontsList.parentElement.style.height = `${this.fontsListOriginalParentHeight}px`;\n        fontsList.classList.remove(\"slide-up\");\n    }\n\n    static showParagraphtools() {\n        BookElements.paragraphTools.classList.add(\"opened\");\n        this.isActiveParagraphTools = true;\n    }\n    static hideParagraphtools() {\n        BookElements.paragraphTools.classList.remove(\"opened\");\n        this.isActiveParagraphTools = false;\n    }\n\n    static handelParagraphtools(p: HTMLParagraphElement) {\n        const { top, left } = p.getBoundingClientRect();\n        const { paragraphTools, highlightButton, unhighlightButton } = BookElements;\n\n        paragraphTools.style.top = p.clientTop + `${top - 65}px`;\n        paragraphTools.style.left = p.clientLeft + `${left - 30 + p.offsetWidth / 2}px`;\n\n        this.selectedParagraph = p;\n\n        if (p.classList.contains(\"highlighted\")) {\n            highlightButton.style.display = \"none\";\n            unhighlightButton.style.display = \"block\";\n        } else {\n            highlightButton.style.display = \"block\";\n            unhighlightButton.style.display = \"none\";\n        }\n    }\n\n    static highlightParagraph() {\n        this.selectedParagraph.classList.add(\"highlighted\");\n        this.hideParagraphtools();\n    }\n\n    static unhighlightParagraph() {\n        this.selectedParagraph.classList.remove(\"highlighted\");\n        this.hideParagraphtools();\n    }\n    static handelCopy() {\n        if (!this.selectedParagraph) return;\n        navigator.clipboard.writeText(this.selectedParagraph.innerText);\n        this.hideParagraphtools();\n    }\n}\n\nexport default Layout;\n","import { setLocalStorage, LocalstorgeKeys } from \"./../helpers/localstore\";\nimport BookElements from \"./book-elements\";\nimport { bookSettings } from \"../../index\";\nimport Layout from \"./layout\";\n\nclass Navigation {\n    private constructor() {}\n\n    static currentPageIndex: number;\n    static pagesCount: number;\n\n    static isNextEnabled(number = 1): boolean {\n        return this.currentPageIndex + 1 < this.getPagesCount() - number + 1;\n    }\n    static isPreviousEnabled(number = 1): boolean {\n        return this.currentPageIndex + 1 > number;\n    }\n\n    static getCurrentPage(): number {\n        const current = this.currentPageIndex + 1;\n\n        if (current > this.getPagesCount()) {\n            this.currentPageIndex = this.getPagesCount() - 1;\n            return this.getPagesCount();\n        }\n        if (current < 1) {\n            this.currentPageIndex = 0;\n            return 1;\n        }\n\n        return current;\n    }\n\n    static getPagesCount(): number {\n        const count = Math.ceil(BookElements.book.scrollWidth / this.getBookWidth());\n        this.pagesCount = count;\n        return count;\n    }\n\n    static getScrollX(pageNumber: number | null = null): number {\n        const targetPageNumber = pageNumber ? pageNumber - 1 : null;\n        return this.getBookWidth() * (targetPageNumber ?? this.currentPageIndex);\n    }\n\n    static getBookWidth(): number {\n        return BookElements.book.getBoundingClientRect().width - 20;\n    }\n\n    static updateNavigation(): void {\n        Layout.hideParagraphtools();\n\n        // Check is nav buttons are active\n        const { nextPageButton, previousPageButton, nextBulkPageButton, previousBulkPageButton } = BookElements;\n\n        (nextPageButton as HTMLButtonElement).disabled = !this.isNextEnabled();\n        (nextBulkPageButton as HTMLButtonElement).disabled = !this.isNextEnabled(bookSettings.allowedNavigationSteps);\n        (previousPageButton as HTMLButtonElement).disabled = !this.isPreviousEnabled();\n        (previousBulkPageButton as HTMLButtonElement).disabled = !this.isPreviousEnabled(bookSettings.allowedNavigationSteps);\n\n        // Save page index in local storag\n        setLocalStorage(LocalstorgeKeys.PAGE_INDEX, this.currentPageIndex);\n\n        // Apply this asyncronsly\n        setTimeout(() => {\n            // Update progress bar\n            BookElements.navigationProgressBar.style.width = `${(this.getCurrentPage() / this.pagesCount) * 100}%`;\n\n            // Update navigation info\n            BookElements.navigationFeedbackText.innerHTML = `${this.getCurrentPage()} / ${this.getPagesCount()}`;\n        }, 0);\n    }\n\n    static next(number = 1): void {\n        if (this.getCurrentPage() >= this.getPagesCount()) return;\n        this.currentPageIndex += number;\n        BookElements.book.scrollTo({\n            top: 0,\n            left: -this.getScrollX(),\n            behavior: \"auto\"\n        });\n        this.updateNavigation();\n    }\n\n    static previous(number = 1): void {\n        if (this.getCurrentPage() <= 1) return;\n        this.currentPageIndex -= number;\n        BookElements.book.scrollTo({\n            top: 0,\n            left: -this.getScrollX(),\n            behavior: \"auto\"\n        });\n        this.updateNavigation();\n    }\n\n    static goToPage(number: number): void {\n        if (number < 1 || number > this.getPagesCount()) return;\n\n        BookElements.book.scrollTo({\n            top: 0,\n            left: -this.getScrollX(number),\n            behavior: \"auto\"\n        });\n        this.updateNavigation();\n    }\n}\n\nexport default Navigation;\n","import Navigation from \"./navigation\";\nimport BookElements from \"./book-elements\";\nimport { bookSettings } from \"../../index\";\nimport { debounce } from \"../helpers/debounce\";\nimport Layout from \"./layout\";\nimport { ColorTheme, Font } from \"../interfaces/BookSettings\";\n\nclass UserActions {\n    private constructor() {}\n\n    static preventScroll(e: Event) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    static initEventListerns() {\n        const {\n            nextPageButton,\n            previousPageButton,\n            nextBulkPageButton,\n            previousBulkPageButton,\n            book,\n            smallerFontButton,\n            resetFontButton,\n            largerFontButton,\n            controlsButton,\n            openFontsListButton,\n            closeFontsListButton,\n            colorThemeButtons,\n            fontButtons,\n            highlightButton,\n            unhighlightButton,\n            copyButton\n        } = BookElements;\n\n        // Global events\n        window.addEventListener(\"wheel\", this.preventScroll, { passive: false });\n\n        window.addEventListener(\"resize\", function () {\n            Layout.hideParagraphtools();\n        });\n\n        window.addEventListener(\n            \"resize\",\n            debounce(() => {\n                Navigation.updateNavigation();\n                Navigation.goToPage(Navigation.currentPageIndex + 1);\n            }, 500)\n        );\n\n        // Book\n        book.addEventListener(\"click\", function (event: MouseEvent) {\n            const cellText = document.getSelection();\n\n            // Prevent action if the lement is p tag\n            Layout.hideParagraphtools();\n            if ((event.target as HTMLParagraphElement).tagName === \"P\") {\n                Layout.showParagraphtools();\n                return;\n            }\n\n            // Prevent action on select a text\n            if (cellText.type === \"Range\") return;\n\n            Layout.handelTogglePanel();\n        });\n\n        // Navigation Buttons\n        nextPageButton.addEventListener(\"click\", function () {\n            Navigation.next();\n        });\n        previousPageButton.addEventListener(\"click\", function () {\n            Navigation.previous();\n        });\n        nextBulkPageButton.addEventListener(\"click\", function () {\n            Navigation.next(bookSettings.allowedNavigationSteps);\n        });\n        previousBulkPageButton.addEventListener(\"click\", function () {\n            Navigation.previous(bookSettings.allowedNavigationSteps);\n        });\n\n        // Panel control actions\n        controlsButton.addEventListener(\"click\", function () {\n            Layout.toggleContol();\n        });\n        smallerFontButton.addEventListener(\"click\", function () {\n            Layout.smallerFont();\n        });\n        resetFontButton.addEventListener(\"click\", function () {\n            Layout.resetFont();\n        });\n        largerFontButton.addEventListener(\"click\", function () {\n            Layout.largerFont();\n        });\n\n        openFontsListButton.addEventListener(\"click\", function () {\n            Layout.openFontsList();\n        });\n\n        closeFontsListButton.addEventListener(\"click\", function () {\n            Layout.closeFontsList();\n        });\n        // Paragraph tools button\n        highlightButton.addEventListener(\"click\", function () {\n            Layout.highlightParagraph();\n        });\n        unhighlightButton.addEventListener(\"click\", function () {\n            Layout.unhighlightParagraph();\n        });\n        copyButton.addEventListener(\"click\", function () {\n            Layout.handelCopy();\n        });\n\n        // Select color theme\n        colorThemeButtons.forEach((button) => {\n            button.addEventListener(\"click\", function () {\n                const theme: ColorTheme = this.getAttribute(\"data-value\") as ColorTheme;\n                Layout.setColorTheme(theme);\n            });\n        });\n\n        // Select font family\n        fontButtons.forEach((button) => {\n            button.addEventListener(\"click\", function () {\n                const font: Font = this.getAttribute(\"data-value\") as Font;\n                Layout.setFont(font);\n            });\n        });\n    }\n\n    // Add event listers on all paragraphs\n    static initParagraphsEventListener(bookParagraphs: NodeListOf<Element>): void {\n        bookParagraphs.forEach((p) => {\n            p.addEventListener(\"click\", function () {\n                Layout.handelParagraphtools(this);\n            });\n        });\n    }\n}\n\nexport default UserActions;\n","type TimeoutHandle = ReturnType<typeof setTimeout>;\n\nexport function debounce<T extends (...args: unknown[]) => void>(callback: T, delay: number): (...args: Parameters<T>) => void {\n    let timer: TimeoutHandle | null;\n    return (...args: Parameters<T>) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            callback.apply(this, args);\n        }, delay);\n    };\n}\n","import UserActions from \"./user-actions\";\n\nclass ParagraphTools {\n    bookParagraphs!: NodeListOf<Element>;\n\n    constructor(bookParagraphs: NodeListOf<Element>) {\n        this.bookParagraphs = bookParagraphs;\n    }\n\n    initTool() {\n        UserActions.initParagraphsEventListener(this.bookParagraphs);\n    }\n}\n\nexport default ParagraphTools;\n","import { BookSettings } from \"./interfaces/BookSettings\";\nimport DataProvider from \"./services/data-provider\";\n\nimport \"./../assets/scss/app.scss\";\nimport UserActions from \"./services/user-actions\";\nimport Navigation from \"./services/navigation\";\nimport Layout from \"./services/layout\";\nimport ParagraphTools from \"./services/paragraph-tools\";\n\nclass App {\n    data!: DataProvider;\n    bookSettings!: BookSettings;\n\n    constructor(bookSettings: BookSettings) {\n        this.bookSettings = bookSettings;\n    }\n\n    async initBook(): Promise<void> {\n        // Set defualt color theme\n        Layout.setColorTheme(this.bookSettings.defaultColorTheme);\n\n        // Set defualt font family\n        Layout.setFont(this.bookSettings.defaultFont);\n\n        // Fetching data and injecting it into DOM\n        this.data = new DataProvider(this.bookSettings.bookId);\n        const htmlChapters = await this.data.getHTMLChapters();\n        Layout.appendChaptersToBody(htmlChapters);\n\n        // Update images url\n        const images = document.querySelectorAll(\"#book img\");\n        Layout.updateImagesUrl(images);\n\n        // Prepare actions panel\n        Layout.setActivePanelState(this.bookSettings.isPanelOpened);\n\n        // Prepare theme color\n        Layout.setColorTheme(this.bookSettings.defaultColorTheme);\n\n        // Prepare font family\n        Layout.setFont(this.bookSettings.defaultFont);\n\n        // Prepare font size ratio\n        Layout.setFontSizeRatio(this.bookSettings.defaultFontSizeRatio);\n\n        // Prepare navigation\n        Navigation.currentPageIndex = this.bookSettings.defaultPageIndex;\n        Navigation.goToPage(this.bookSettings.defaultPageIndex + 1);\n        Navigation.updateNavigation();\n\n        // Adding events listeners\n        UserActions.initEventListerns();\n\n        // Handle app responsivness\n        Layout.handelResponsivness();\n\n        // Prepare paragraph floating tools\n        const paragraphs = document.querySelectorAll(\"#book p\");\n        const paragrapghTools: ParagraphTools = new ParagraphTools(paragraphs);\n        paragrapghTools.initTool();\n    }\n}\n\nexport default App;\n","import { BookSettings, ColorTheme, Font } from \"./core/interfaces/BookSettings\";\nimport App from \"./core/app\";\nimport { getLocalStorage, LocalstorgeKeys } from \"./core/helpers/localstore\";\n\nexport const bookSettings: BookSettings = {\n    bookId: \"26dd5f00-0c75-4367-adea-537ece731385\",\n    pagesPerScreen: 2,\n    defaultPageIndex: (getLocalStorage(LocalstorgeKeys.PAGE_INDEX) as number) || 0,\n    allowedNavigationSteps: 10,\n    mobileBreakporint: 1024,\n    isPanelOpened: (getLocalStorage(LocalstorgeKeys.PANEL_STATE) as boolean) || false,\n    defaultFontSizeRatio: (getLocalStorage(LocalstorgeKeys.FONT_SIZE_RATIO) as number) || 1,\n    defaultColorTheme: (getLocalStorage(LocalstorgeKeys.COLOR_THEME) as ColorTheme) || ColorTheme.WHITE,\n    defaultFont: (getLocalStorage(LocalstorgeKeys.FONT_FAMILY) as Font) || Font.NOTO\n};\n\nexport const initApp = () => {\n    const main: App = new App(bookSettings);\n    main.initBook();\n};\n\ninitApp();\n"],"names":["ColorTheme","Font","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","LocalstorgeKeys","baseUrl","window","location","href","slice","id","this","chaptersNames","bookNav","_getNavigation","Promise","fetch","text","console","log","_getHTMLDocument","name","createBookNavigationlist","navAsText","parser","DOMParser","navAsHTML","parseFromString","nav","anchorList","querySelector","querySelectorAll","forEach","item","chapterNameArr","getAttribute","split","push","length","getHTMLChapters","navList","chapterDataPromises","all","map","chapter","body","firstElementChild","setLocalStorage","value","localStorage","setItem","JSON","stringify","getLocalStorage","itemStr","getItem","parse","e","book","document","getElementById","nextPageButton","previousPageButton","nextBulkPageButton","previousBulkPageButton","smallerFontButton","resetFontButton","largerFontButton","colorThemeButtons","fontButtons","openFontsListButton","closeFontsListButton","fontsList","fontFeedback","controlsButton","controlsPopup","navigationFeedbackText","navigationProgressBar","panel","paragraphTools","highlightButton","unhighlightButton","copyButton","query","mediaQueryList","matchMedia","addListener","callback","event","matches","removeListener","_updateFontFeedback","font","selectedFont","_updateButtonsDisablity","disabled","fontSizeRatio","updateImagesUrl","imagesList","img","setAttribute","replaceAll","bookSettings","bookId","appendChaptersToBody","elements","el","handelResponsivness","mediaQuery","mobileBreakporint","handleResize","setActivePanelState","state","classList","add","remove","isActivePanel","handelTogglePanel","closeFontsList","toggleContol","isActiveControls","smallerFont","style","fontSize","innerHTML","Math","ceil","FONT_SIZE_RATIO","resetFont","largerFont","setColorTheme","newTheme","button","themeValue","COLOR_THEME","setFont","newFont","fontValue","FONT_FAMILY","setFontSizeRatio","ratio","openFontsList","fontsListOriginalParentHeight","parentElement","offsetHeight","height","showParagraphtools","isActiveParagraphTools","hideParagraphtools","handelParagraphtools","p","getBoundingClientRect","top","left","clientTop","clientLeft","offsetWidth","selectedParagraph","contains","display","highlightParagraph","unhighlightParagraph","handelCopy","navigator","clipboard","writeText","innerText","isActiveFontsList","isNextEnabled","number","currentPageIndex","getPagesCount","isPreviousEnabled","getCurrentPage","current","count","getBookWidth","pagesCount","getScrollX","pageNumber","targetPageNumber","width","updateNavigation","allowedNavigationSteps","PAGE_INDEX","setTimeout","next","behavior","previous","goToPage","preventScroll","preventDefault","stopPropagation","initEventListerns","addEventListener","passive","delay","timer","clearTimeout","apply","args","debounce","cellText","getSelection","target","tagName","type","theme","initParagraphsEventListener","bookParagraphs","initTool","initBook","defaultColorTheme","defaultFont","data","htmlChapters","images","isPanelOpened","defaultFontSizeRatio","defaultPageIndex","paragraphs","pagesPerScreen","PANEL_STATE","WHITE","NOTO"],"sourceRoot":""}